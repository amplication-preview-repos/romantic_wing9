/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringFilter } from "../../util/StringFilter";
import { Type } from "class-transformer";
import { IsOptional, IsEnum, ValidateNested } from "class-validator";
import { JsonFilter } from "../../util/JsonFilter";
import { EnumRecipeTypeField } from "./EnumRecipeTypeField";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { AnalysisResultListRelationFilter } from "../../analysisResult/base/AnalysisResultListRelationFilter";
import { RecipeExecutionListRelationFilter } from "../../recipeExecution/base/RecipeExecutionListRelationFilter";

@InputType()
class RecipeWhereInput {
  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: JsonFilter,
  })
  @Type(() => JsonFilter)
  @IsOptional()
  @Field(() => JsonFilter, {
    nullable: true,
  })
  steps?: JsonFilter;

  @ApiProperty({
    required: false,
    enum: EnumRecipeTypeField,
  })
  @IsEnum(EnumRecipeTypeField)
  @IsOptional()
  @Field(() => EnumRecipeTypeField, {
    nullable: true,
  })
  typeField?: "Option1";

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  name?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => AnalysisResultListRelationFilter,
  })
  @ValidateNested()
  @Type(() => AnalysisResultListRelationFilter)
  @IsOptional()
  @Field(() => AnalysisResultListRelationFilter, {
    nullable: true,
  })
  analysisResults?: AnalysisResultListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => RecipeExecutionListRelationFilter,
  })
  @ValidateNested()
  @Type(() => RecipeExecutionListRelationFilter)
  @IsOptional()
  @Field(() => RecipeExecutionListRelationFilter, {
    nullable: true,
  })
  recipeExecutions?: RecipeExecutionListRelationFilter;
}

export { RecipeWhereInput as RecipeWhereInput };
