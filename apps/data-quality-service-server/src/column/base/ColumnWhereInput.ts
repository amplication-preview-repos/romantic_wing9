/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringFilter } from "../../util/StringFilter";
import { Type } from "class-transformer";
import { IsOptional, IsEnum, ValidateNested } from "class-validator";
import { EnumColumnDataType } from "./EnumColumnDataType";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { BooleanNullableFilter } from "../../util/BooleanNullableFilter";
import { TableWhereUniqueInput } from "../../table/base/TableWhereUniqueInput";
import { RecipeColumnsListRelationFilter } from "../../recipeColumns/base/RecipeColumnsListRelationFilter";

@InputType()
class ColumnWhereInput {
  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    enum: EnumColumnDataType,
  })
  @IsEnum(EnumColumnDataType)
  @IsOptional()
  @Field(() => EnumColumnDataType, {
    nullable: true,
  })
  dataType?: "Option1";

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  name?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: BooleanNullableFilter,
  })
  @Type(() => BooleanNullableFilter)
  @IsOptional()
  @Field(() => BooleanNullableFilter, {
    nullable: true,
  })
  isUnique?: BooleanNullableFilter;

  @ApiProperty({
    required: false,
    type: BooleanNullableFilter,
  })
  @Type(() => BooleanNullableFilter)
  @IsOptional()
  @Field(() => BooleanNullableFilter, {
    nullable: true,
  })
  isNullable?: BooleanNullableFilter;

  @ApiProperty({
    required: false,
    type: () => TableWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TableWhereUniqueInput)
  @IsOptional()
  @Field(() => TableWhereUniqueInput, {
    nullable: true,
  })
  table?: TableWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => RecipeColumnsListRelationFilter,
  })
  @ValidateNested()
  @Type(() => RecipeColumnsListRelationFilter)
  @IsOptional()
  @Field(() => RecipeColumnsListRelationFilter, {
    nullable: true,
  })
  recipeColumnsItems?: RecipeColumnsListRelationFilter;
}

export { ColumnWhereInput as ColumnWhereInput };
