/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  MaxLength,
  IsOptional,
  IsDate,
  ValidateNested,
} from "class-validator";
import { Type } from "class-transformer";
import { RecipeStepCreateNestedManyWithoutRecipesInput } from "./RecipeStepCreateNestedManyWithoutRecipesInput";
import { AnalysisResultCreateNestedManyWithoutRecipesInput } from "./AnalysisResultCreateNestedManyWithoutRecipesInput";

@InputType()
class RecipeCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  creationDate?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  owner?: string | null;

  @ApiProperty({
    required: false,
    type: () => RecipeStepCreateNestedManyWithoutRecipesInput,
  })
  @ValidateNested()
  @Type(() => RecipeStepCreateNestedManyWithoutRecipesInput)
  @IsOptional()
  @Field(() => RecipeStepCreateNestedManyWithoutRecipesInput, {
    nullable: true,
  })
  recipeSteps?: RecipeStepCreateNestedManyWithoutRecipesInput;

  @ApiProperty({
    required: false,
    type: () => AnalysisResultCreateNestedManyWithoutRecipesInput,
  })
  @ValidateNested()
  @Type(() => AnalysisResultCreateNestedManyWithoutRecipesInput)
  @IsOptional()
  @Field(() => AnalysisResultCreateNestedManyWithoutRecipesInput, {
    nullable: true,
  })
  analysisResults?: AnalysisResultCreateNestedManyWithoutRecipesInput;
}

export { RecipeCreateInput as RecipeCreateInput };
